#!/bin/sh

set -e

NOVA_CONF=/etc/nova/nova.conf
NOVA_API_CONF=/etc/nova/api-paste.ini

#PKGOS-INCLUDE#

if [ "$1" = "configure" ] || [ "$1" = "reconfigure" ] ; then
	. /usr/share/debconf/confmodule
	. /usr/share/dbconfig-common/dpkg/postinst

	# Create config files if they don't exist
	pkgos_var_user_group nova
	pkgos_write_new_conf nova nova.conf
	pkgos_write_new_conf nova api-paste.ini
	if [ -z "$2" ]; then
		# New install - blanket permissions
		chown -R nova:nova /var/lib/nova/
	elif dpkg --compare-versions "$2" lt "2011.3"; then
		# Make sure the LXC rootfs mount points are excluded
		# during upgrades from previous versions
		find /var/lib/nova/ -name 'rootfs' -prune -o \
			-group root -a -user nova -exec chown nova:nova {} \;
		find /var/lib/nova/ -name 'rootfs' -prune -o \
			-group nogroup -a -user nova -exec chown nova:nova {} \;
	fi
	pkgos_dbc_postinst -sh /etc/nova/nova.conf nova sql_connection $@

	db_get nova/configure_db
	if [ "$RET" = "true" ]; then
		echo "nova-common: Now running \"nova-manage db sync\", this make take a while..."
		nova-manage db sync
	fi

	db_get nova/auth-host
	pkgos_edit_config auth_host ${RET} ${NOVA_API_CONF} filter:authtoken
	db_get nova/admin-tenant-name
	pkgos_edit_config admin_tenant_name ${RET} ${NOVA_API_CONF} filter:authtoken
	db_get nova/admin-user
	pkgos_edit_config admin_user ${RET} ${NOVA_API_CONF} filter:authtoken
	db_get nova/admin-password
	pkgos_edit_config admin_password ${RET} ${NOVA_API_CONF} filter:authtoken

	chmod 0440 /etc/sudoers.d/nova-common
	chmod 0750 /var/log/nova
	chmod 0755 /var/lib/nova
fi

#DEBHELPER#

exit 0
