#!/bin/sh
### BEGIN INIT INFO
# Provides:          nova-xvpvncproxy
# Required-Start:    $network $local_fs $remote_fs $syslog
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Nova XVP VNC proxy
# Description:       Nova XVP VNC proxy
### END INIT INFO

# Authors: Julien Danjou <acid@debian.org> & Thomas Goirand <zigo@debian.org>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="OpenStack XVP VNC proxy"
NAME=nova-xvpvncproxy
DAEMON=/usr/bin/nova-xvpvncproxy
DAEMON_ARGS="--config-file /etc/nova/nova.conf --log-file /var/log/nova/nova-consoleproxy.log"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
NOVA_USER=nova
LOCK_DIR=/var/lock/nova/

# Exit if the package is not installed, or the default file not present,
# or not set to this daemon
[ -x $DAEMON ] || exit 0
if [ -r /etc/default/nova-consoleproxy ] ; then
    . /etc/default/nova-consoleproxy
fi

if ! [ "${NOVA_CONSOLE_PROXY_TYPE}" = "xenvnc" ] ; then
	exit 0
fi

mkdir -p ${LOCK_DIR}
chown ${NOVA_USER} ${LOCK_DIR}

. /lib/lsb/init-functions

do_start() {
	start-stop-daemon --start --background --quiet --chuid ${NOVA_USER}:nova --make-pidfile --pidfile $PIDFILE --startas $DAEMON --test > /dev/null \
		|| return 1
	start-stop-daemon --start --background --quiet --chuid ${NOVA_USER}:nova --make-pidfile --pidfile $PIDFILE --startas $DAEMON -- \
		$DAEMON_ARGS \
		|| return 2
}

do_stop() {
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
	RETVAL="$?"
	rm -f $PIDFILE
	return "$RETVAL"
}

case "$1" in
start)
	log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
;;
stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
status)
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
;;
restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
	;;
	*)
		# Failed to stop
		log_end_msg 1
	;;
	esac
;;
*)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
;;
esac

exit 0
