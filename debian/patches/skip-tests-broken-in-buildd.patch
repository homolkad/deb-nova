Description: Skip tests that can't work in buildd
Author: Abaakouk Mehdi <sileht@sileht.net>
Forwarded: not-needed

diff --git a/nova/tests/test_libvirt.py b/nova/tests/test_libvirt.py
index db11fa9..196ffa3 100644
--- a/nova/tests/test_libvirt.py
+++ b/nova/tests/test_libvirt.py
@@ -563,6 +563,7 @@ class LibvirtConnTestCase(test.TestCase):
         result = conn.get_volume_connector(volume)
         self.assertDictMatch(expected, result)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_config(self):
         conn = libvirt_driver.LibvirtDriver(True)
         instance_ref = db.instance_create(self.context, self.test_instance)
@@ -607,6 +608,7 @@ class LibvirtConnTestCase(test.TestCase):
         self.assertEquals(cfg.clock.timers[1].tickpolicy,
                           "catchup")
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_config_with_two_nics(self):
         conn = libvirt_driver.LibvirtDriver(True)
         instance_ref = db.instance_create(self.context, self.test_instance)
@@ -659,6 +661,7 @@ class LibvirtConnTestCase(test.TestCase):
         self.assertEquals(type(cfg.devices[2]),
                           config.LibvirtConfigGuestConsole)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_config_with_block_device(self):
         conn = libvirt_driver.LibvirtDriver(True)
 
@@ -686,6 +689,7 @@ class LibvirtConnTestCase(test.TestCase):
                                     None, None)
         self.assertEquals(conf.cpu, None)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_cpu_config_default_kvm(self):
         self.flags(libvirt_type="kvm",
                    libvirt_cpu_mode=None)
@@ -731,6 +735,7 @@ class LibvirtConnTestCase(test.TestCase):
                                     None, None)
         self.assertEquals(conf.cpu, None)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_cpu_config_host_passthrough_new(self):
         def get_lib_version_stub(self):
             return (0 * 1000 * 1000) + (9 * 1000) + 11
@@ -750,6 +755,7 @@ class LibvirtConnTestCase(test.TestCase):
         self.assertEquals(conf.cpu.mode, "host-passthrough")
         self.assertEquals(conf.cpu.model, None)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_cpu_config_host_model_new(self):
         def get_lib_version_stub(self):
             return (0 * 1000 * 1000) + (9 * 1000) + 11
@@ -769,6 +775,7 @@ class LibvirtConnTestCase(test.TestCase):
         self.assertEquals(conf.cpu.mode, "host-model")
         self.assertEquals(conf.cpu.model, None)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_cpu_config_custom_new(self):
         def get_lib_version_stub(self):
             return (0 * 1000 * 1000) + (9 * 1000) + 11
@@ -789,6 +796,7 @@ class LibvirtConnTestCase(test.TestCase):
         self.assertEquals(conf.cpu.mode, "custom")
         self.assertEquals(conf.cpu.model, "Penryn")
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_cpu_config_host_passthrough_old(self):
         def get_lib_version_stub(self):
             return (0 * 1000 * 1000) + (9 * 1000) + 7
@@ -805,6 +813,7 @@ class LibvirtConnTestCase(test.TestCase):
                           _fake_network_info(self.stubs, 1),
                           None, None)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_cpu_config_host_model_old(self):
         def get_lib_version_stub(self):
             return (0 * 1000 * 1000) + (9 * 1000) + 7
@@ -845,6 +854,7 @@ class LibvirtConnTestCase(test.TestCase):
         self.assertEquals(conf.cpu.features[0].name, "tm2")
         self.assertEquals(conf.cpu.features[1].name, "ht")
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_get_guest_cpu_config_custom_old(self):
         def get_lib_version_stub(self):
             return (0 * 1000 * 1000) + (9 * 1000) + 7
@@ -865,6 +875,7 @@ class LibvirtConnTestCase(test.TestCase):
         self.assertEquals(conf.cpu.mode, None)
         self.assertEquals(conf.cpu.model, "Penryn")
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_and_uri_no_ramdisk_no_kernel(self):
         instance_data = dict(self.test_instance)
         self._check_xml_and_uri(instance_data,
@@ -876,6 +887,7 @@ class LibvirtConnTestCase(test.TestCase):
         self._check_xml_and_uri(instance_data, expect_kernel=False,
                                 expect_ramdisk=False, expect_xen_hvm=True)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_and_uri_no_ramdisk_no_kernel_xen_pv(self):
         instance_data = dict(self.test_instance)
         instance_data.update({'vm_mode': vm_mode.XEN})
@@ -883,18 +895,21 @@ class LibvirtConnTestCase(test.TestCase):
                                 expect_ramdisk=False, expect_xen_hvm=False,
                                 xen_only=True)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_and_uri_no_ramdisk(self):
         instance_data = dict(self.test_instance)
         instance_data['kernel_id'] = 'aki-deadbeef'
         self._check_xml_and_uri(instance_data,
                                 expect_kernel=True, expect_ramdisk=False)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_and_uri_no_kernel(self):
         instance_data = dict(self.test_instance)
         instance_data['ramdisk_id'] = 'ari-deadbeef'
         self._check_xml_and_uri(instance_data,
                                 expect_kernel=False, expect_ramdisk=False)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_and_uri(self):
         instance_data = dict(self.test_instance)
         instance_data['ramdisk_id'] = 'ari-deadbeef'
@@ -902,6 +917,7 @@ class LibvirtConnTestCase(test.TestCase):
         self._check_xml_and_uri(instance_data,
                                 expect_kernel=True, expect_ramdisk=True)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_and_uri_rescue(self):
         instance_data = dict(self.test_instance)
         instance_data['ramdisk_id'] = 'ari-deadbeef'
@@ -909,23 +925,27 @@ class LibvirtConnTestCase(test.TestCase):
         self._check_xml_and_uri(instance_data, expect_kernel=True,
                                 expect_ramdisk=True, rescue=instance_data)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_and_uri_rescue_no_kernel_no_ramdisk(self):
         instance_data = dict(self.test_instance)
         self._check_xml_and_uri(instance_data, expect_kernel=False,
                                 expect_ramdisk=False, rescue=instance_data)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_and_uri_rescue_no_kernel(self):
         instance_data = dict(self.test_instance)
         instance_data['ramdisk_id'] = 'aki-deadbeef'
         self._check_xml_and_uri(instance_data, expect_kernel=False,
                                 expect_ramdisk=True, rescue=instance_data)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_and_uri_rescue_no_ramdisk(self):
         instance_data = dict(self.test_instance)
         instance_data['kernel_id'] = 'aki-deadbeef'
         self._check_xml_and_uri(instance_data, expect_kernel=True,
                                 expect_ramdisk=False, rescue=instance_data)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_uuid(self):
         instance_data = dict(self.test_instance)
         self._check_xml_and_uuid(instance_data)
@@ -934,24 +954,29 @@ class LibvirtConnTestCase(test.TestCase):
         instance_data = dict(self.test_instance)
         self._check_xml_and_container(instance_data)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_disk_prefix(self):
         instance_data = dict(self.test_instance)
         self._check_xml_and_disk_prefix(instance_data)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_disk_driver(self):
         instance_data = dict(self.test_instance)
         self._check_xml_and_disk_driver(instance_data)
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_disk_bus_virtio(self):
         self._check_xml_and_disk_bus({"disk_format": "raw"},
                                      None,
                                      (("disk", "virtio", "vda"),))
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_disk_bus_ide(self):
         self._check_xml_and_disk_bus({"disk_format": "iso"},
                                      None,
                                      (("cdrom", "ide", "hda"),))
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_xml_disk_bus_ide_and_virtio(self):
         swap = {'device_name': '/dev/vdc',
                 'swap_size': 1}
@@ -1482,6 +1507,7 @@ class LibvirtConnTestCase(test.TestCase):
                            "fake",
                            "/dev/fake")
 
+    @test.skip_test("Skip because libvirt doesn't run is buildd")
     def test_multi_nic(self):
         instance_data = dict(self.test_instance)
         network_info = _fake_network_info(self.stubs, 2)
