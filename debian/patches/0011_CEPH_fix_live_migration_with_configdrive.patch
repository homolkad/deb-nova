Description: libvirt: support live migrations of instances with config
 drives
 In case of shared storage, to allow an instance with a configdrive
 to be migrated if we must store the configdrive into the same backend
 as other disks.
Author: Mehdi Abaakouk <mehdi.abaakouk@enovance.com>
Date: Tue, 5 Aug 2014 11:06:10 +0800
Origin: https://review.openstack.org/#/c/112014/
Last-Update: 2014-08-25

Index: nova/nova/exception.py
===================================================================
--- nova.orig/nova/exception.py
+++ nova/nova/exception.py
@@ -1544,11 +1544,6 @@ class InvalidWatchdogAction(Invalid):
     msg_fmt = _("Provided watchdog action (%(action)s) is not supported.")
 
 
-class NoLiveMigrationForConfigDriveInLibVirt(NovaException):
-    msg_fmt = _("Live migration of instances with config drives is not "
-                "supported in libvirt unless libvirt instance path and "
-                "drive data is shared across compute nodes.")
-
 class LiveMigrationWithOldNovaNotSafe(NovaException):
     msg_fmt = _("Host %(server)s is running an old version of Nova, "
                 "live migrations involving that version may cause data loss. "
Index: nova/nova/virt/libvirt/driver.py
===================================================================
--- nova.orig/nova/virt/libvirt/driver.py
+++ nova/nova/virt/libvirt/driver.py
@@ -2724,6 +2724,16 @@ class LibvirtDriver(driver.ComputeDriver
                                   'with error: %s'),
                                   e, instance=instance)
 
+                def dummy_fetch_func(target, *args, **kwargs):
+                    # NOTE(sileht): this is never called because the
+                    # the target have already been created by
+                    # cdb.make_drive call
+                    pass
+
+                raw('disk.config').cache(fetch_func=dummy_fetch_func,
+                                         context=context,
+                                         filename='disk.config' + suffix)
+
         # File injection only if needed
         elif inject_files and CONF.libvirt.inject_partition != -2:
             if booted_from_volume:
@@ -3062,11 +3072,19 @@ class LibvirtDriver(driver.ComputeDriver
                     vol.save(nova_context.get_admin_context())
 
             if 'disk.config' in disk_mapping:
+                # NOTE(sileht): a configdrive is a raw image
+                # it works well with rbd, lvm and raw images_type
+                # but we must force to raw image_type if the desired
+                # images_type is qcow2
+                if CONF.libvirt.images_type not in ['rbd', 'lvm']:
+                    image_type = "raw"
+                else:
+                    image_type = None
                 diskconfig = self.get_guest_disk_config(instance,
                                                         'disk.config',
                                                         disk_mapping,
                                                         inst_type,
-                                                        'raw')
+                                                        image_type)
                 devices.append(diskconfig)
 
         for d in devices:
@@ -4603,13 +4621,6 @@ class LibvirtDriver(driver.ComputeDriver
             is_block_migration = migrate_data.get('block_migration', True)
             instance_relative_path = migrate_data.get('instance_relative_path')
 
-        if not (is_shared_instance_path and is_shared_block_storage):
-            # NOTE(mikal): block migration of instances using config drive is
-            # not supported because of a bug in libvirt (read only devices
-            # are not copied by libvirt). See bug/1246201
-            if configdrive.required_by(instance):
-                raise exception.NoLiveMigrationForConfigDriveInLibVirt()
-
         if not is_shared_instance_path:
             # NOTE(mikal): this doesn't use libvirt_utils.get_instance_path
             # because we are ensuring that the same instance directory name
Index: nova/nova/tests/virt/libvirt/test_libvirt.py
===================================================================
--- nova.orig/nova/tests/virt/libvirt/test_libvirt.py
+++ nova/nova/tests/virt/libvirt/test_libvirt.py
@@ -63,7 +63,6 @@ from nova.tests.objects import test_pci_
 from nova.tests.virt.libvirt import fake_libvirt_utils
 from nova import utils
 from nova import version
-from nova.virt import configdrive
 from nova.virt.disk import api as disk
 from nova.virt import driver
 from nova.virt import event as virtevent
@@ -4191,26 +4190,6 @@ class LibvirtConnTestCase(test.TestCase)
         result = conn.pre_live_migration(c, inst_ref, vol, nw_info, None)
         self.assertIsNone(result)
 
-    def test_pre_live_migration_block_with_config_drive_mocked(self):
-        # Creating testdata
-        vol = {'block_device_mapping': [
-                  {'connection_info': 'dummy', 'mount_device': '/dev/sda'},
-                  {'connection_info': 'dummy', 'mount_device': '/dev/sdb'}]}
-        conn = libvirt_driver.LibvirtDriver(fake.FakeVirtAPI(), False)
-
-        def fake_true(*args, **kwargs):
-            return True
-
-        self.stubs.Set(configdrive, 'required_by', fake_true)
-
-        inst_ref = {'id': 'foo'}
-        c = context.get_admin_context()
-
-        self.assertRaises(exception.NoLiveMigrationForConfigDriveInLibVirt,
-                          conn.pre_live_migration, c, inst_ref, vol, None,
-                          None, {'is_shared_instance_path': False,
-                                 'is_shared_block_storage': False})
-
     def test_pre_live_migration_vol_backed_works_correctly_mocked(self):
         # Creating testdata, using temp dir.
         with utils.tempdir() as tmpdir:
