#!/bin/sh
set -e

. /usr/share/debconf/confmodule

NOVA_COM_DEF=/etc/default/nova-common
NOVA_CONF=/etc/nova/nova.conf
NOVA_API_CONF=/etc/nova/api-paste.ini

#PKGOS-INCLUDE#

manage_nova_enable () {
	# pkgos_read_config -r /etc/keystone/keystone.conf auth_token keystone/auth-token DEFAULT
	pkgos_read_config -sh ${NOVA_COM_DEF} NOVA_ENABLE nova/start_services
	NOVA_ENABLE=${RET}
	if [ "${RET}" = "false" ] ; then
		NOVA_ENABLE=false
	else
		NOVA_ENABLE=true
	fi
	# Write a default config file
	echo "# defaults file for nova daemons

# start nova daemons from init.d script?
#  only allowed values are \"true\" and \"false\"
NOVA_ENABLE=${NOVA_ENABLE}" >${NOVA_COM_DEF}
}

pkgos_var_user_group nova
pkgos_dbc_read_conf -sh ${NOVA_CONF} nova sql_connection $@
db_get nova/configure_db || true
if ! [ "$RET" = true ] ; then
    db_input high nova/remote_db_type || true
    db_input high nova/remote_db_host || true
    db_input high nova/remote_db_port || true
    db_input high nova/remote_db_user || true
    db_input high nova/remote_db_pass || true
    db_input high nova/remote_db_name || true
    db_go
fi

manage_nova_enable

pkgos_read_config ${NOVA_API_CONF} auth_host		nova/auth-host		filter:authtoken
pkgos_read_config ${NOVA_API_CONF} admin_tenant_name	nova/admin-tenant-name	filter:authtoken
pkgos_read_config ${NOVA_API_CONF} admin_user		nova/admin-user 	filter:authtoken
pkgos_read_config ${NOVA_API_CONF} admin_password	nova/admin-password	filter:authtoken

exit 0
